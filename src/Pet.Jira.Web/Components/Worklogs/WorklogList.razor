@using Pet.Jira.Application.Extensions
@using Pet.Jira.Web.Components.Common

<style>
    .mud-simple-table.mud-table-dense * tr td {
        padding: 4px 14px 4px 14px;
    }

    .mud-chip {
        margin: 0px;
    }

    .mud-progress-linear-bar {
        background-color: #1fc8a5 !important;
    }

    .mud-chip-filled.mud-chip-color-error {
        background-color: #e39e99 !important;
    }

    .mud-grid-spacing-xs-1 {
        margin: 0px;
    }

    .mud-fab-size-small {
        width: 32px;
        height: 32px;
    }

    .mud-fab {
        min-height: 32px;
    }

    .pet-input-control {
        margin-top: 0px
    }

    .pet-button {
        padding: 4px !important
    }

    .pet-input-control > .mud-input-control-input-container > div.mud-input.mud-input-text {
        margin-top: 0px !important;
    }

    .pet-table-summary-date-container {
        text-align: center;
        width: 128px
    }

    .pet-table-mud-badge-counter {
        margin-left: 0px
    }

    .pet-paper {
        background-color: inherit;
    }

    .pet-table-summary-tr {
        background-color: var(--mud-palette-background-grey);
    }
</style>

@if (Items.IsEmpty())
{
    <Stub Message="Set the search options and click the 'Search' button to display a list of actual and estimated worklogs..."/>
}
else
{
    <MudSimpleTable Dense=true Hover=true Class="mud-table-container">
        <tbody>
            @foreach (var item in Items)
            {
                <tr class="pet-table-summary-tr">
                    <td>
                        <MudPaper Class="gap-1 d-flex flex-wrap border-none align-center pet-paper" Elevation="0" Width="100%">
                            <MudPaper Class="flex-none d-flex gap-4 py-2 align-center pet-paper" Width="196px" Elevation="0">
                                <MudPaper Width="128px" Elevation="0">
                                    <MudProgressLinear Color="Color.Success" Size="Size.Small" Value="@item.Progress" />
                                </MudPaper>
                                <MudPaper Class="pet-table-summary-date-container pet-paper" Width="128px" Elevation="0">
                                    <b>@item.Date.ToString("dd-MM-yyyy")</b>
                                </MudPaper>
                            </MudPaper>
                            <MudElement Class="flex-none d-flex gap-1 pet-worklog-day-chips-container">
                                <MudChip Color="Color.Default" Size="Size.Small">
                                    <b class="pet-not-display-on-480">Logged: </b> @item.ActualWorklogsSum.ToString(@"hh\:mm\:ss")
                                </MudChip>
                                <MudChip Color="Color.Default" Size="Size.Small">
                                    <b class="pet-not-display-on-480">Estimated: </b> @item.CalculatedWorklogsSum.ToString(@"hh\:mm\:ss")
                                </MudChip>
                                @if (@item.Date.DayOfWeek == DayOfWeek.Saturday || @item.Date.DayOfWeek == DayOfWeek.Sunday)
                                {
                                    <MudChip Color="Color.Error" Size="Size.Small">
                                        <b class="pet-not-display-on-480">Day: </b> @item.Date.DayOfWeek
                                    </MudChip>
                                }
                                else
                                {
                                    <MudChip Color="Color.Default" Size="Size.Small">
                                        <b class="pet-not-display-on-480">Day: </b> @item.Date.DayOfWeek
                                    </MudChip>
                                }
                                @if (item.HasRawEstimatedWorklogs)
                                {
                                    <MudBadge Content="item.RawEstimatedWorklogCount" Color="Color.Info" Overlap="true" Class="pet-table-mud-badge-counter">
                                        <MudIcon Icon="@Icons.Sharp.AddCircle" Color="Color.Primary" />
                                    </MudBadge>
                                }
                                </MudElement>
                        </MudPaper>
                    </td>
                </tr>
                @foreach (var entity in item.EstimatedItems)
                {
                    <tr>
                        <td>
                            <WorklogItem Entity="@entity" OnAddPressed="AddWorklogAsync" />
                        </td>
                    </tr>
                    @foreach (var child in entity.ChildItems)
                    {
                        <tr>
                            <td>
                                <EstimatedActualWorklogItem Entity="@child" />
                            </td>
                        </tr>
                    }
                }
                @foreach (var entity in item.ActualItems.Where(item => item.ParentItem == null))
                {
                    <tr>
                        <td>
                            <ActualWorklogItem Entity="@entity" />
                        </td>
                    </tr>
                }
            }
        </tbody>
    </MudSimpleTable>
}
